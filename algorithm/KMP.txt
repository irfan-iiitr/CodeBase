void buildLPS(string p,int m , int lps[]){
       int l=0;
        int i=1;
        lps[0]=0;

        while(i<m){
         if(p[i]==p[l]){
             l++;
            lps[i]=l;
            i++;
        }
        else{
            if(l!=0)
            {
                l=lps[l-1];
            }
            else{
               lps[i]=l;
                i++;
            }
        }
      }
    }

    int KMP(string s,string p){
        int n=s.length(); int m=p.length();
        int lps[m];
        int i=0,j=0;
        buildLPS(p,m,lps);
        int res=0, next=0;
        while(i<n){
            if(p[j]==s[i])
            {
                i++; j++;
            }
            if(j==m){
                  j=lps[j-1];
                res++;
             }
            else if(i<n and p[j]!=s[i])
                if(j!=0)
                    j=lps[j-1];
            else
                i++;
        }
        return res;
    }