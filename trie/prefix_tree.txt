class Node{
    public:
    Node* children[26];
    bool isLeaf=false;
};
class Trie {
public:
   Node* root;
    Trie() {
        root=new Node();
    }
    
    void insert(string word) {
        Node* temp=root;
        for(auto ch:word){
            int idx=ch-'a';
            if(temp->children[idx]!=NULL){
                temp=temp->children[idx];
            }
            else{
                temp->children[idx]=new Node();
                temp=temp->children[idx];
            }
        }
        temp->isLeaf=true;
    }
    
    bool search(string word) {
       Node* temp=root;
       for(auto ch:word)
       {
          int idx=ch-'a';
          if(temp->children[idx]!=NULL)
          temp=temp->children[idx];
          else
          return false;
       }
       return temp->isLeaf;
    }
    
    bool startsWith(string prefix) {
        Node* temp=root;
        for(auto ch :prefix){
          int idx=ch-'a';
          if(temp->children[idx]!=NULL)
          temp=temp->children[idx];
          else
          return false;
        }

        return true;
    }
};

/**
 * Your Trie object will be instantiated and called as such:
 * Trie* obj = new Trie();
 * obj->insert(word);
 * bool param_2 = obj->search(word);
 * bool param_3 = obj->startsWith(prefix);
 */